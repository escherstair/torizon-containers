include: '/ci-scripts/release/release.yml'

image: docker:latest

variables:
  DEBIAN_POINT_RELEASE: "12.5-slim"
  TORADEX_INTERNAL_DOCKERHUB_CACHE: "artifactory-horw.int.toradex.com/dockerhub-proxy-horw"

  DOTNET_6_RELEASE: "6.0"
  DOTNET_6_SEMANTIC_VERSION: "6.0.27"

  DOTNET_8_RELEASE: "8.0"
  DOTNET_8_SEMANTIC_VERSION: "8.0.2"

  # The latest version of vsdbg can be obtained by running the follow command:
  #curl -sSL https://aka.ms/getvsdbgsh | /bin/sh /dev/stdin -v latest -l ~/vsdbg
  DOTNET_DEBUGGER_RELEASE: "17.10.20209.7"

  # This should be set by docker image already, just to be sure...
  DOCKER_HOST: tcp://docker:2375
  # Use overlayfs driver for better performance
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

  DEBIAN_DOCKER_IMAGES_FOLDER: "debian-docker-images"
  IMX_FOLDER: "imx"
  AM62_FOLDER: "am62"
  TESTS_AM62_FOLDER: "tests"
  CHROMIUM_TESTS_FOLDER: "chromium-tests"
  DEBIAN_CROSS_TOOLCHAINS_FOLDER: "debian-cross-toolchains"
  DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER: "debian-dotnet-development-images"
  SSH_FOLDER: "ssh"
  BASE_FOLDER: "base"
  BASE_VIVANTE_FOLDER: "base-vivante"
  WAYLAND_BASE_FOLDER: "wayland-base"
  WAYLAND_BASE_VIVANTE_FOLDER: "wayland-base-vivante"
  WESTON_FOLDER: "weston"
  GRAPHICS_TESTS_FOLDER: "graphics-tests"
  GRAPHICS_TESTS_VIVANTE_FOLDER: "graphics-tests-vivante"
  WESTON_TOUCH_CALIBRATOR_FOLDER: "weston-touch-calibrator"
  QT5_WAYLAND_FOLDER: "qt5-wayland"
  QT6_WAYLAND_FOLDER: "qt6-wayland"
  QT5_WAYLAND_EXAMPLES_FOLDER: "qt5-wayland-examples"
  QT6_WAYLAND_EXAMPLES_FOLDER: "qt6-wayland-examples"
  DEBUG_FOLDER: "debug"
  UNO_BASE_FOLDER: "uno-base"
  UNO_DEBUG_FOLDER: "uno-debug"
  RT_VALIDATION_FOLDER: "rt-validation"
  RT_TESTS_FOLDER: "rt-tests"
  STRESS_TESTS_FOLDER: "stress-tests"
  CHROMIUM_FOLDER: "chromium"
  COG_FOLDER: "cog"

services:
  - name: docker:dind

.include-regctl:
  before_script:
    - apk update && apk add curl
    - curl -L https://github.com/regclient/regclient/releases/download/v0.6.0/regctl-linux-amd64 > /usr/bin/regctl
    # to update the hash: download the metadata the regctl repo, verify the signatures, generate the SHA256SUMS file
    # with `sha256sum -b regctl > SHA256SUMS` and update it here.
    - echo "44216c0ab3bd41ae30b07392d6cdab6971f48ab3f72400e617f5f0ded4d70742 /usr/bin/regctl" > SHA256SUMS
    - if ! sha256sum -c SHA256SUMS; then echo "Checksum for regctl has failed"; fi
    - chmod 755 /usr/bin/regctl
    - regctl registry login docker.io -u $DOCKERHUB_USER -p $DOCKERHUB_TOKEN

.do_print_environment_variables: &do_print_environment_variables
  - echo "GitLab CI/CD environment variables:"
  - env

.docker-build:
  variables:
    ADD_TORADEX_REPOSITORY: 1
  script:
  - *do_print_environment_variables
  - apk add curl
  - export REGISTRY="docker.io"
  - export IMAGE_TAG="stable-rc"
  - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_TOKEN
  - docker info
  - export DATE=$(date +%Y%m%d)
  - |
    if [[ "${IMAGE_NAME}" == *am62 ]]; then
      export TORADEX_SNAPSHOT=$(curl https://feeds1.toradex.com/debian-am62/snapshots/latest-snapshot)
    else
      export TORADEX_SNAPSHOT=$(curl https://feeds1.toradex.com/debian/snapshots/latest-snapshot)
    fi

  - docker buildx create --name multiarch-builder --driver docker-container --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --use
  - docker buildx inspect --bootstrap
  - docker run --privileged --rm ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/tonistiigi/binfmt --install arm64,arm

  - if [ -n "$BUILD_FOR_ARM_V7" ]; then echo "Building for linux/arm/v7" && PLATFORM_BUILD_ARM_V7="--platform linux/arm/v7"; fi
  - if [ -n "$BUILD_FOR_ARM_V8" ]; then echo "Building for linux/arm64/v8" && PLATFORM_BUILD_ARM_V8="--platform linux/arm64/v8"; fi
  - if [ -n "$BUILD_FOR_AMD64" ]; then echo "Building for linux/amd64" && PLATFORM_BUILD_AMD64="--platform linux/amd64"; fi

  - docker buildx build --progress=plain --sbom=true --push ${PLATFORM_BUILD_ARM_V7} ${PLATFORM_BUILD_ARM_V8} ${PLATFORM_BUILD_AMD64}
                  --build-arg ACCEPT_FSL_EULA=${ACCEPT_FSL_EULA}
                  --build-arg ADD_TORADEX_REPOSITORY=${ADD_TORADEX_REPOSITORY}
                  --build-arg BASE_IMAGE_NAME=${BASE_IMAGE_NAME}
                  --build-arg BASE_IMAGE_NAME_DEBUG=${BASE_IMAGE_NAME_DEBUG}
                  --build-arg BASE_IMAGE_NAME_WAYLAND=${BASE_IMAGE_NAME_WAYLAND}
                  --build-arg CROSS_TARGET_ARCH=${CROSS_TARGET_ARCH}
                  --build-arg DEBIAN_POINT_RELEASE=${DEBIAN_POINT_RELEASE}
                  --build-arg DOTNET_DEBUGGER_RELEASE=${DOTNET_DEBUGGER_RELEASE}
                  --build-arg DOTNET_RUNTIME=${DOTNET_RUNTIME}
                  --build-arg DOTNET_VERSION=${DOTNET_VERSION}
                  --build-arg IMAGE_TAG=${IMAGE_TAG}
                  --build-arg REGISTRY_PROXY=${TORADEX_INTERNAL_DOCKERHUB_CACHE}
                  --build-arg REGISTRY=${TORADEX_INTERNAL_DOCKERHUB_CACHE}
                  --build-arg REGISTRY_NAMESPACE=${REGISTRY_NAMESPACE}
                  --build-arg TORADEX_SNAPSHOT=${TORADEX_SNAPSHOT}                  
                  --label container.name=${IMAGE_NAME}
                  --label container.version=${MAJOR}.${MINOR}.${PATCH}-${DATE}
                  --label git.branch=${CI_COMMIT_BRANCH}
                  --label git.hash=${CI_COMMIT_SHA}
                  --label pipeline.id=${CI_PIPELINE_ID}
                  -f ${DOCKERFILE_FOLDER}Dockerfile
                  -t ${REGISTRY_NAMESPACE}/${IMAGE_NAME}:${IMAGE_TAG}
                  ${DOCKERFILE_FOLDER}
  - if [ -n "$BUILD_FOR_ARM_V7" ]; then docker run --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/bitnami/trivy image --no-progress --exit-code 0 --platform linux/arm/v7 ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}:${IMAGE_TAG}; fi
  - if [ -n "$BUILD_FOR_ARM_V8" ]; then docker run --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/bitnami/trivy image --no-progress --exit-code 0 --platform linux/arm64 ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}:${IMAGE_TAG}; fi
  - if [ -n "$BUILD_FOR_AMD64" ]; then docker run --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/bitnami/trivy image --no-progress --exit-code 0 --platform linux/amd64 ${TORADEX_INTERNAL_DOCKERHUB_CACHE}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}:${IMAGE_TAG}; fi

## debian-docker-images

build-base:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WAYLAND_BASE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WAYLAND_BASE_VIVANTE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_VIVANTE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${CHROMIUM_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${COG_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_BASE_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_DEBUG_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    IMAGE_NAME: debian
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${BASE_FOLDER}/"
  needs: []

build-wayland-base:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WAYLAND_BASE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WAYLAND_BASE_VIVANTE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_VIVANTE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${CHROMIUM_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${COG_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: debian
    IMAGE_NAME: wayland-base
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WAYLAND_BASE_FOLDER}/"
  needs: ["build-base"]

build-weston:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
  before_script:
    - ./${DEBIAN_DOCKER_IMAGES_FOLDER}/${WESTON_FOLDER}/make_feature_map.sh
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base
    IMAGE_NAME: weston
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_FOLDER}/"
  needs: ["build-wayland-base"]

build-graphics-tests:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base
    IMAGE_NAME: graphics-tests
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_FOLDER}/"
  needs: ["build-wayland-base"]

build-weston-touch-calibrator:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: weston
    IMAGE_NAME: weston-touch-calibrator
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/"
  needs: ["build-weston"]

build-qt5-wayland:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base
    IMAGE_NAME: qt5-wayland
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_FOLDER}/"
  needs: ["build-wayland-base"]

build-qt5-wayland-examples:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: qt5-wayland
    IMAGE_NAME: qt5-wayland-examples
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/"
  needs: ["build-qt5-wayland"]

build-qt6-wayland:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base
    IMAGE_NAME: qt6-wayland
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_FOLDER}/"
  needs: ["build-wayland-base"]

build-qt6-wayland-examples:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: qt6-wayland
    IMAGE_NAME: qt6-wayland-examples
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/"
  needs: ["build-qt6-wayland"]

build-wayland-base-vivante:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WAYLAND_VIVANTE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WAYLAND_BASE_VIVANTE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_VIVANTE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${CHROMIUM_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${COG_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: debian
    IMAGE_NAME: wayland-base-vivante
    ACCEPT_FSL_EULA: 1
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WAYLAND_BASE_VIVANTE_FOLDER}/"
  needs: ["build-base"]

build-weston-vivante:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
  before_script:
    - ./${DEBIAN_DOCKER_IMAGES_FOLDER}/${WESTON_FOLDER}/make_feature_map.sh
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-vivante
    IMAGE_NAME: weston-vivante
    ACCEPT_FSL_EULA: 1
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${WESTON_FOLDER}/"
  needs: ["build-wayland-base-vivante"]

build-graphics-tests-vivante:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-vivante
    IMAGE_NAME: graphics-tests-vivante
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${GRAPHICS_TESTS_VIVANTE_FOLDER}/"
  needs: ["build-wayland-base-vivante"]

build-qt5-wayland-vivante:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-vivante
    IMAGE_NAME: qt5-wayland-vivante
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_FOLDER}/"
  needs: ["build-wayland-base-vivante"]

build-qt5-wayland-vivante-examples:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: qt5-wayland-vivante
    IMAGE_NAME: qt5-wayland-examples-vivante
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/"
  needs: ["build-qt5-wayland-vivante"]

build-qt6-wayland-vivante:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-vivante
    IMAGE_NAME: qt6-wayland-vivante
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_FOLDER}/"
  needs: ["build-wayland-base-vivante"]

build-qt6-wayland-vivante-examples:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: qt6-wayland-vivante
    IMAGE_NAME: qt6-wayland-examples-vivante
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/"
  needs: ["build-qt6-wayland-vivante"]

build-chromium:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${CHROMIUM_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base
    IMAGE_NAME: chromium
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${CHROMIUM_FOLDER}/"
  needs: ["build-wayland-base"]

build-cog:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${COG_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base
    IMAGE_NAME: cog
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${IMX_FOLDER}/${COG_FOLDER}/"
  needs: ["build-wayland-base"]

## ${DEBIAN_CROSS_TOOLCHAINS_FOLDER}

build-armhf-toolchain:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${SSH_FOLDER}/*
  before_script:
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_AMD64: "true"
    CROSS_COMPILER: arm-linux-gnueabihf
    CROSS_TARGET_ARCH: armhf
    IMAGE_NAME: debian-cross-toolchain-armhf
    DOCKERFILE_FOLDER: "${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${BASE_FOLDER}/"
  needs: []
  
build-armhf-toolchain-ssh:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${SSH_FOLDER}/*
  variables:
    BUILD_FOR_ARM_AMD64: "true"
    IMAGE_NAME: debian-cross-toolchain-ssh-armhf
    CROSS_TARGET_ARCH: armhf
    DOCKERFILE_FOLDER: "${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${SSH_FOLDER}/"
  needs: ["build-armhf-toolchain"]

build-arm64-toolchain:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${SSH_FOLDER}/*
  before_script:
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_AMD64: "true"
    CROSS_COMPILER: aarch64-linux-gnu
    CROSS_TARGET_ARCH: arm64
    IMAGE_NAME: debian-cross-toolchain-arm64
    DOCKERFILE_FOLDER: "${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${BASE_FOLDER}/"
  needs: []

build-arm64-toolchain-vivante:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${BASE_VIVANTE_FOLDER}/*
  before_script:
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_AMD64: "true"
    CROSS_COMPILER: aarch64-linux-gnu
    CROSS_TARGET_ARCH: arm64
    IMAGE_NAME: debian-cross-toolchain-arm64-vivante
    DOCKERFILE_FOLDER: "${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${BASE_VIVANTE_FOLDER}/"
    ACCEPT_FSL_EULA: 1
  needs: []

build-arm64-toolchain-ssh:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${SSH_FOLDER}/*
  variables:
    BUILD_FOR_ARM_AMD64: "true"
    IMAGE_NAME: debian-cross-toolchain-ssh-arm64
    CROSS_TARGET_ARCH: arm64
    DOCKERFILE_FOLDER: "${DEBIAN_CROSS_TOOLCHAINS_FOLDER}/${SSH_FOLDER}/"
  needs: [build-arm64-toolchain]

## debian-dotnet-development-images

### dotnet 6

build-dotnet-6:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_6_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_6_SEMANTIC_VERSION}"
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    IMAGE_NAME: dotnet
    DOTNET_RUNTIME: dotnet
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/"
  needs: ["build-base"]

build-dotnet-6-asp:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_6_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_6_SEMANTIC_VERSION}"
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    IMAGE_NAME: aspdotnet
    DOTNET_RUNTIME: aspnetcore
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/"
  needs: ["build-base"]

build-dotnet-6-uno:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_BASE_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_6_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_6_SEMANTIC_VERSION}"
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: dotnet
    BASE_IMAGE_NAME_WAYLAND: wayland-base
    IMAGE_NAME: dotnet-uno
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_BASE_FOLDER}/"
  needs: ["build-dotnet-6", "build-wayland-base"]

build-dotnet-6-debug:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_6_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_6_SEMANTIC_VERSION}"
    - export DOTNET_DEBUGGER_RELEASE="${DOTNET_DEBUGGER_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: dotnet
    IMAGE_NAME: dotnet-debug
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/"
  needs: ["build-dotnet-6"]

build-dotnet-6-debug-asp:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_6_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_6_SEMANTIC_VERSION}"
    - export DOTNET_DEBUGGER_RELEASE="${DOTNET_DEBUGGER_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: aspdotnet
    IMAGE_NAME: aspdotnet-debug
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/"
  needs: ["build-dotnet-6-asp"]

build-dotnet-6-debug-uno:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_6_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_6_SEMANTIC_VERSION}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME_DEBUG: dotnet-debug
    BASE_IMAGE_NAME: dotnet-uno
    IMAGE_NAME: dotnet-uno-debug
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_DEBUG_FOLDER}/"
  needs: ["build-dotnet-6-uno"]

### dotnet 8

build-dotnet-8:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_8_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_8_SEMANTIC_VERSION}"
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    IMAGE_NAME: dotnet
    DOTNET_RUNTIME: dotnet
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/"
  needs: ["build-base"]

build-dotnet-8-asp:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_8_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_8_SEMANTIC_VERSION}"
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    IMAGE_NAME: aspdotnet
    DOTNET_RUNTIME: aspnetcore
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${BASE_FOLDER}/"
  needs: ["build-base"]

build-dotnet-8-uno:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_BASE_FOLDER}/*
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_8_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_8_SEMANTIC_VERSION}"
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: dotnet
    BASE_IMAGE_NAME_WAYLAND: wayland-base
    IMAGE_NAME: dotnet-uno
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_BASE_FOLDER}/"
  needs: ["build-dotnet-8", "build-wayland-base"]

build-dotnet-8-debug:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export DOTNET_VERSION="${DOTNET_8_SEMANTIC_VERSION}"
    - export DOTNET_DEBUGGER_RELEASE="${DOTNET_DEBUGGER_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: dotnet
    IMAGE_NAME: dotnet-debug
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/"
  needs: ["build-dotnet-8"]

build-dotnet-8-debug-asp:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/*
  before_script:
    - export DOTNET_VERSION="${DOTNET_8_SEMANTIC_VERSION}"
    - export DOTNET_DEBUGGER_RELEASE="${DOTNET_DEBUGGER_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: aspdotnet
    IMAGE_NAME: aspdotnet-debug
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${DEBUG_FOLDER}/"
  needs: ["build-dotnet-8-asp"]

build-dotnet-8-debug-uno:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_DEBUG_FOLDER}/*
  before_script:
    - export RELEASE_APPEND="-${DOTNET_8_RELEASE}"
    - export DOTNET_VERSION="${DOTNET_8_SEMANTIC_VERSION}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME_DEBUG: dotnet-debug
    BASE_IMAGE_NAME: dotnet-uno
    IMAGE_NAME: dotnet-uno-debug
    DOCKERFILE_FOLDER: "${DEBIAN_DOTNET_DEVELOPMENT_IMAGES_FOLDER}/${UNO_DEBUG_FOLDER}/"
  needs: ["build-dotnet-8-uno"]

## rt-validation

build-rt-tests:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${RT_VALIDATION_FOLDER}/${RT_TESTS_FOLDER}/*
  before_script:
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    IMAGE_NAME: rt-tests
    DOCKERFILE_FOLDER: "${RT_VALIDATION_FOLDER}/${RT_TESTS_FOLDER}/"
  needs: []

build-stress-tests:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${RT_VALIDATION_FOLDER}/${STRESS_TESTS_FOLDER}/*
  before_script:
    - export DEBIAN_POINT_RELEASE="${DEBIAN_POINT_RELEASE}"
  variables:
    BUILD_FOR_ARM_V7: "true"
    BUILD_FOR_ARM_V8: "true"
    IMAGE_NAME: stress-tests
    DOCKERFILE_FOLDER: "${RT_VALIDATION_FOLDER}/${STRESS_TESTS_FOLDER}/"
  needs: []

## am62

build-base-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${BASE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WAYLAND_BASE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${TESTS_AM62_FOLDER}/${GRAPHICS_TESTS_AM62_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT6_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${CHROMIUM_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${COG_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    IMAGE_NAME: debian-am62
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${BASE_FOLDER}/"

build-wayland-base-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WAYLAND_BASE_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${TESTS_AM62_FOLDER}/${GRAPHICS_TESTS_AM62_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT6_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${CHROMIUM_FOLDER}/* 
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${COG_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: debian-am62
    IMAGE_NAME: wayland-base-am62
    ACCEPT_FSL_EULA: 1
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WAYLAND_BASE_FOLDER}/"
  needs: ["build-base-am62"]

build-weston-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-am62
    IMAGE_NAME: weston-am62
    ACCEPT_FSL_EULA: 1
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_FOLDER}/"
  needs: ["build-wayland-base-am62"]

build-graphics-tests-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${TESTS_AM62_FOLDER}/${GRAPHICS_TESTS_AM62_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-am62
    IMAGE_NAME: graphics-tests-am62
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${TESTS_AM62_FOLDER}/${GRAPHICS_TESTS_FOLDER}/"
  needs: ["build-wayland-base-am62"]

build-weston-touch-calibrator-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: weston-am62
    IMAGE_NAME: weston-touch-calibrator-am62
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${WESTON_TOUCH_CALIBRATOR_FOLDER}/"
  needs: ["build-weston-am62"]

build-qt5-wayland-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-am62
    IMAGE_NAME: qt5-wayland-am62
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_FOLDER}/"
  needs: ["build-wayland-base-am62"]

build-qt5-wayland-am62-examples:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: qt5-wayland-am62
    IMAGE_NAME: qt5-wayland-examples-am62
    QT5_EXAMPLES_DEBIAN: 1
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/"
  needs: ["build-qt5-wayland-am62"]

build-qt6-wayland-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_FOLDER}/*
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-am62
    IMAGE_NAME: qt6-wayland-am62
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT6_WAYLAND_FOLDER}/"
  needs: ["build-wayland-base-am62"]

build-qt6-wayland-am62-examples:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT5_WAYLAND_EXAMPLES_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: qt6-wayland-am62
    IMAGE_NAME: qt6-wayland-examples-am62
    QT6_EXAMPLES_DEBIAN: 1
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${QT6_WAYLAND_EXAMPLES_FOLDER}/"
  needs: ["build-qt6-wayland-am62"]

build-chromium-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${CHROMIUM_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-am62
    IMAGE_NAME: chromium-am62
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${CHROMIUM_FOLDER}/"
  needs: ["build-wayland-base-am62"]

build-chromium-tests-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${TESTS_AM62_FOLDER}/${CHROMIUM_AM62_TESTS_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: chromium-am62
    IMAGE_NAME: chromium-tests-am62
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${TESTS_AM62_FOLDER}/${CHROMIUM_TESTS_FOLDER}/"
  needs: ["build-chromium-am62"]

build-cog-am62:
  retry: 2
  extends: .docker-build
  rules:
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG
    when: never
  - changes:
    - gitlab-ci.yml
    - ${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${COG_AM62_FOLDER}/*
  variables:
    BUILD_FOR_ARM_V8: "true"
    BASE_IMAGE_NAME: wayland-base-am62
    IMAGE_NAME: cog-am62
    DOCKERFILE_FOLDER: "${DEBIAN_DOCKER_IMAGES_FOLDER}/${AM62_FOLDER}/${COG_FOLDER}/"
  needs: ["build-wayland-base-am62"]

.shellcheck:
  image: koalaman/shellcheck-alpine:latest

.shellcheck-git:
  extends: .shellcheck
  before_script:
    - apk update
    - apk add git
  script:
    git ls-files --exclude='*.sh' --ignored -c -z | xargs -0r shellcheck

shell-errors:
  extends: .shellcheck-git
# Let's incrementally fix the errors and then disable the allow_failure property for this job.
  allow_failure: true
  variables:
    SHELLCHECK_SEVERITY: 'error'

shell-warnings:
  extends: .shellcheck-git
  allow_failure: true
  variables:
    SHELLCHECK_SEVERITY: 'warning'

shell-format:
  image: mvdan/shfmt:v3.2.0-alpine
  before_script:
    - apk update
    - apk add git
# Let's incrementally fix the errors and then disable the allow_failure property for this job.
  allow_failure: true
  script:
    - git ls-files --exclude='*.sh' --ignored -c -z | xargs -0r shfmt -i 2 -ci -d
